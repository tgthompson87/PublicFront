import React, { useEffect, useState } from "react";
import ReactPlayer from "react-player/youtube";
import loadingScreen from "../images/GameLoading.jpg";
import { Link } from "react-router-dom";
import { motion } from "framer-motion";

const GameDetailsScreen = ({ width }) => {
  //scroll top on load
  useEffect(() => {
    window.scrollTo(0, 0);
  }, []);

  const [ready, setReady] = useState(false);

  const onReadyHandler = () => {
    setReady(true);
  };

  return (
    <>
      {width > 768 && (
        <motion.div exit={{ opacity: 0 }} style={styles.container}>
          <div style={styles.projectName}>
            <svg
              style={{ width: "25vw" }}
              width="100%"
              height="100%"
              preserveAspectRatio="xMidYMid meet"
              viewBox="0 0 215 81"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <g id="Game: 21">
                <g id="title">
                  <path
                    id="."
                    d="M145.24 61.751C145.24 62.2933 145.137 62.8037 144.929 63.2822C144.722 63.7448 144.435 64.1515 144.068 64.5024C143.717 64.8534 143.302 65.1245 142.824 65.3159C142.361 65.5233 141.859 65.627 141.316 65.627C140.79 65.627 140.288 65.5233 139.809 65.3159C139.347 65.1245 138.94 64.8534 138.589 64.5024C138.238 64.1515 137.959 63.7448 137.751 63.2822C137.544 62.8037 137.44 62.2933 137.44 61.751C137.44 61.2087 137.544 60.7062 137.751 60.2437C137.959 59.7651 138.238 59.3504 138.589 58.9995C138.94 58.6486 139.347 58.3774 139.809 58.186C140.288 57.9787 140.79 57.875 141.316 57.875C141.859 57.875 142.361 57.9787 142.824 58.186C143.302 58.3774 143.717 58.6486 144.068 58.9995C144.435 59.3504 144.722 59.7651 144.929 60.2437C145.137 60.7062 145.24 61.2087 145.24 61.751Z"
                    fill="#FA3663"
                  />
                  <path
                    id="._2"
                    d="M145.24 46.751C145.24 47.2933 145.137 47.8037 144.929 48.2822C144.722 48.7448 144.435 49.1515 144.068 49.5024C143.717 49.8534 143.302 50.1245 142.824 50.3159C142.361 50.5233 141.859 50.627 141.316 50.627C140.79 50.627 140.288 50.5233 139.809 50.3159C139.347 50.1245 138.94 49.8534 138.589 49.5024C138.238 49.1515 137.959 48.7448 137.751 48.2822C137.544 47.8037 137.44 47.2933 137.44 46.751C137.44 46.2087 137.544 45.7062 137.751 45.2437C137.959 44.7651 138.238 44.3504 138.589 43.9995C138.94 43.6486 139.347 43.3774 139.809 43.186C140.288 42.9787 140.79 42.875 141.316 42.875C141.859 42.875 142.361 42.9787 142.824 43.186C143.302 43.3774 143.717 43.6486 144.068 43.9995C144.435 44.3504 144.722 44.7651 144.929 45.2437C145.137 45.7062 145.24 46.2087 145.24 46.751Z"
                    fill="#FA3663"
                  />
                  <path
                    id="Game 21"
                    d="M18.9 65.495C15.33 65.495 12.3 64.82 9.81 63.47C7.35 62.12 5.475 60.23 4.185 57.8C2.895 55.37 2.25 52.52 2.25 49.25C2.25 45.89 2.91 42.98 4.23 40.52C5.58 38.06 7.515 36.155 10.035 34.805C12.555 33.455 15.585 32.78 19.125 32.78C21.345 32.78 23.445 33.095 25.425 33.725C27.435 34.355 29.07 35.195 30.33 36.245L28.08 41.69C26.7 40.67 25.29 39.95 23.85 39.53C22.41 39.08 20.85 38.855 19.17 38.855C15.96 38.855 13.545 39.755 11.925 41.555C10.335 43.325 9.54 45.89 9.54 49.25C9.54 52.64 10.35 55.205 11.97 56.945C13.62 58.685 16.05 59.555 19.26 59.555C20.97 59.555 22.77 59.285 24.66 58.745V52.535H17.82V47.495H30.42V63.065C28.86 63.845 27.06 64.445 25.02 64.865C22.98 65.285 20.94 65.495 18.9 65.495ZM43.4784 65.495C41.8284 65.495 40.3734 65.18 39.1134 64.55C37.8534 63.92 36.8484 63.065 36.0984 61.985C35.3784 60.905 35.0184 59.69 35.0184 58.34C35.0184 56.75 35.4384 55.475 36.2784 54.515C37.1184 53.555 38.4834 52.88 40.3734 52.49C42.2634 52.07 44.7684 51.86 47.8884 51.86H49.5084V51.095C49.5084 49.775 49.2084 48.845 48.6084 48.305C48.0084 47.735 46.9884 47.45 45.5484 47.45C44.3484 47.45 43.0734 47.645 41.7234 48.035C40.4034 48.395 39.0834 48.95 37.7634 49.7L35.9184 45.155C36.6984 44.645 37.6434 44.18 38.7534 43.76C39.8934 43.34 41.0784 43.025 42.3084 42.815C43.5384 42.575 44.7084 42.455 45.8184 42.455C49.2384 42.455 51.7884 43.235 53.4684 44.795C55.1484 46.325 55.9884 48.71 55.9884 51.95V65H49.6434V61.67C49.1934 62.84 48.4284 63.77 47.3484 64.46C46.2984 65.15 45.0084 65.495 43.4784 65.495ZM45.0084 60.95C46.2684 60.95 47.3334 60.515 48.2034 59.645C49.0734 58.775 49.5084 57.65 49.5084 56.27V55.37H47.9334C45.6234 55.37 43.9884 55.58 43.0284 56C42.0684 56.39 41.5884 57.08 41.5884 58.07C41.5884 58.91 41.8734 59.6 42.4434 60.14C43.0434 60.68 43.8984 60.95 45.0084 60.95ZM61.1473 65V42.905H67.8073V46.1C68.4673 44.96 69.3673 44.075 70.5073 43.445C71.6773 42.785 73.0273 42.455 74.5573 42.455C76.1173 42.455 77.4373 42.8 78.5173 43.49C79.6273 44.18 80.4673 45.23 81.0373 46.64C81.7273 45.32 82.7173 44.3 84.0073 43.58C85.3273 42.83 86.7823 42.455 88.3723 42.455C90.8923 42.455 92.7673 43.22 93.9973 44.75C95.2273 46.25 95.8423 48.575 95.8423 51.725V65H89.0473V51.95C89.0473 50.48 88.8073 49.415 88.3273 48.755C87.8773 48.065 87.0973 47.72 85.9873 47.72C84.6973 47.72 83.6923 48.17 82.9723 49.07C82.2523 49.97 81.8923 51.245 81.8923 52.895V65H75.0973V51.95C75.0973 50.48 74.8573 49.415 74.3773 48.755C73.8973 48.065 73.1173 47.72 72.0373 47.72C70.7473 47.72 69.7423 48.17 69.0223 49.07C68.3023 49.97 67.9423 51.245 67.9423 52.895V65H61.1473ZM112.523 65.495C109.913 65.495 107.663 65.03 105.773 64.1C103.913 63.14 102.473 61.805 101.453 60.095C100.463 58.355 99.9675 56.315 99.9675 53.975C99.9675 51.695 100.448 49.7 101.407 47.99C102.398 46.25 103.733 44.9 105.413 43.94C107.123 42.95 109.088 42.455 111.308 42.455C114.518 42.455 117.068 43.475 118.958 45.515C120.848 47.525 121.793 50.255 121.793 53.705V55.415H106.448C106.688 57.155 107.318 58.43 108.338 59.24C109.388 60.02 110.828 60.41 112.658 60.41C113.858 60.41 115.073 60.23 116.303 59.87C117.533 59.51 118.643 58.955 119.633 58.205L121.433 62.75C120.323 63.59 118.958 64.265 117.338 64.775C115.748 65.255 114.143 65.495 112.523 65.495ZM111.578 46.955C110.138 46.955 108.968 47.39 108.068 48.26C107.198 49.13 106.658 50.345 106.448 51.905H116.168C115.988 48.605 114.458 46.955 111.578 46.955ZM164.038 65V59.825L173.983 49.385C175.243 48.005 176.143 46.805 176.683 45.785C177.253 44.735 177.538 43.685 177.538 42.635C177.538 39.935 175.873 38.585 172.543 38.585C171.253 38.585 169.963 38.84 168.673 39.35C167.383 39.83 166.123 40.58 164.893 41.6L162.643 36.47C163.963 35.33 165.583 34.43 167.503 33.77C169.453 33.11 171.448 32.78 173.488 32.78C177.028 32.78 179.728 33.575 181.588 35.165C183.478 36.725 184.423 38.96 184.423 41.87C184.423 43.79 183.973 45.635 183.073 47.405C182.203 49.145 180.763 51.035 178.753 53.075L172.633 59.285H185.593V65H164.038ZM192.19 65V59.285H199.3V41.06L193.855 44.255L191.2 39.17L201.325 33.275H206.275V59.285H212.935V65H192.19Z"
                    fill="#232B2B"
                  />
                </g>
              </g>
            </svg>
            {/* surround the below div in a link component from react router */}
            <Link style={{ textDecoration: "none" }} to="/game">
              <div
                style={{
                  borderWidth: 2.5,
                  borderStyle: "solid",
                  borderColor: "#FA3663",
                  height: "2.5vw",
                  width: "10vw",
                  color: "#FA3663",
                  fontSize: "1.3vw",
                  fontWeight: "700",
                  paddingTop: "0.6vw",
                  marginTop: "1.6vw",
                  cursor: "pointer",
                }}
              >
                LAUNCH APP
              </div>
            </Link>
          </div>
          <div style={styles.description}>
            <p style={styles.heading}></p>
            <p style={styles.paragraph}>
              21 is a turn-based game that challenges the player (vs computer),
              in a race to 21. The concept is based around an algorithm I
              designed that alters the computers moves in response to the player
              in the hope of winning. The aim of the game is to NOT be the
              player who 'taps' the bomb after the count of 21 is reached.
              <br />
              <br />I created the game inside Reactjs, using javascript, html
              and css combined with click responsive svg animations. The app
              primarily showcases UI/UX game design, sequential css svg
              animations, state management and responsive algorithmic computing.
              Feel free to check out my{" "}
              <a style={styles.link} href="https://github.com/tab87tt/portfolio-front">
                GitHub
              </a>{" "}
              source code for more details. Final note: Give it a go, try and
              beat the computer algorithm, I promise it is possible to win!
            </p>
          </div>
          <div style={styles.videoContainerOuter}>
            <div style={styles.videoContainerInner}>
              {!ready && (
                <div
                  style={{
                    width: "100%",
                    height: "100%",
                    position: "absolute",
                    top: 0,
                    left: 0,
                  }}
                >
                  <img
                    src={loadingScreen}
                    style={{ width: "100%", height: "100%" }}
                    alt="Loading Video..."
                  />
                </div>
              )}
              <ReactPlayer
                style={{ position: "absolute", top: 0, left: 0 }}
                loop
                controls
                width="100%"
                height="100%"
                onReady={onReadyHandler}
                url="https://youtu.be/kfDvZnhQM-8"
              />
            </div>
          </div>
        </motion.div>
      )}
      {width <= 768 && (
        <motion.div exit={{ opacity: 0 }} style={styles.container}>
          <div style={styles.projectName}>
            <svg
              style={{ width: "55vw" }}
              width="100%"
              height="100%"
              preserveAspectRatio="xMidYMid meet"
              viewBox="0 0 215 81"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <g id="Game: 21">
                <g id="title">
                  <path
                    id="."
                    d="M145.24 61.751C145.24 62.2933 145.137 62.8037 144.929 63.2822C144.722 63.7448 144.435 64.1515 144.068 64.5024C143.717 64.8534 143.302 65.1245 142.824 65.3159C142.361 65.5233 141.859 65.627 141.316 65.627C140.79 65.627 140.288 65.5233 139.809 65.3159C139.347 65.1245 138.94 64.8534 138.589 64.5024C138.238 64.1515 137.959 63.7448 137.751 63.2822C137.544 62.8037 137.44 62.2933 137.44 61.751C137.44 61.2087 137.544 60.7062 137.751 60.2437C137.959 59.7651 138.238 59.3504 138.589 58.9995C138.94 58.6486 139.347 58.3774 139.809 58.186C140.288 57.9787 140.79 57.875 141.316 57.875C141.859 57.875 142.361 57.9787 142.824 58.186C143.302 58.3774 143.717 58.6486 144.068 58.9995C144.435 59.3504 144.722 59.7651 144.929 60.2437C145.137 60.7062 145.24 61.2087 145.24 61.751Z"
                    fill="#FA3663"
                  />
                  <path
                    id="._2"
                    d="M145.24 46.751C145.24 47.2933 145.137 47.8037 144.929 48.2822C144.722 48.7448 144.435 49.1515 144.068 49.5024C143.717 49.8534 143.302 50.1245 142.824 50.3159C142.361 50.5233 141.859 50.627 141.316 50.627C140.79 50.627 140.288 50.5233 139.809 50.3159C139.347 50.1245 138.94 49.8534 138.589 49.5024C138.238 49.1515 137.959 48.7448 137.751 48.2822C137.544 47.8037 137.44 47.2933 137.44 46.751C137.44 46.2087 137.544 45.7062 137.751 45.2437C137.959 44.7651 138.238 44.3504 138.589 43.9995C138.94 43.6486 139.347 43.3774 139.809 43.186C140.288 42.9787 140.79 42.875 141.316 42.875C141.859 42.875 142.361 42.9787 142.824 43.186C143.302 43.3774 143.717 43.6486 144.068 43.9995C144.435 44.3504 144.722 44.7651 144.929 45.2437C145.137 45.7062 145.24 46.2087 145.24 46.751Z"
                    fill="#FA3663"
                  />
                  <path
                    id="Game 21"
                    d="M18.9 65.495C15.33 65.495 12.3 64.82 9.81 63.47C7.35 62.12 5.475 60.23 4.185 57.8C2.895 55.37 2.25 52.52 2.25 49.25C2.25 45.89 2.91 42.98 4.23 40.52C5.58 38.06 7.515 36.155 10.035 34.805C12.555 33.455 15.585 32.78 19.125 32.78C21.345 32.78 23.445 33.095 25.425 33.725C27.435 34.355 29.07 35.195 30.33 36.245L28.08 41.69C26.7 40.67 25.29 39.95 23.85 39.53C22.41 39.08 20.85 38.855 19.17 38.855C15.96 38.855 13.545 39.755 11.925 41.555C10.335 43.325 9.54 45.89 9.54 49.25C9.54 52.64 10.35 55.205 11.97 56.945C13.62 58.685 16.05 59.555 19.26 59.555C20.97 59.555 22.77 59.285 24.66 58.745V52.535H17.82V47.495H30.42V63.065C28.86 63.845 27.06 64.445 25.02 64.865C22.98 65.285 20.94 65.495 18.9 65.495ZM43.4784 65.495C41.8284 65.495 40.3734 65.18 39.1134 64.55C37.8534 63.92 36.8484 63.065 36.0984 61.985C35.3784 60.905 35.0184 59.69 35.0184 58.34C35.0184 56.75 35.4384 55.475 36.2784 54.515C37.1184 53.555 38.4834 52.88 40.3734 52.49C42.2634 52.07 44.7684 51.86 47.8884 51.86H49.5084V51.095C49.5084 49.775 49.2084 48.845 48.6084 48.305C48.0084 47.735 46.9884 47.45 45.5484 47.45C44.3484 47.45 43.0734 47.645 41.7234 48.035C40.4034 48.395 39.0834 48.95 37.7634 49.7L35.9184 45.155C36.6984 44.645 37.6434 44.18 38.7534 43.76C39.8934 43.34 41.0784 43.025 42.3084 42.815C43.5384 42.575 44.7084 42.455 45.8184 42.455C49.2384 42.455 51.7884 43.235 53.4684 44.795C55.1484 46.325 55.9884 48.71 55.9884 51.95V65H49.6434V61.67C49.1934 62.84 48.4284 63.77 47.3484 64.46C46.2984 65.15 45.0084 65.495 43.4784 65.495ZM45.0084 60.95C46.2684 60.95 47.3334 60.515 48.2034 59.645C49.0734 58.775 49.5084 57.65 49.5084 56.27V55.37H47.9334C45.6234 55.37 43.9884 55.58 43.0284 56C42.0684 56.39 41.5884 57.08 41.5884 58.07C41.5884 58.91 41.8734 59.6 42.4434 60.14C43.0434 60.68 43.8984 60.95 45.0084 60.95ZM61.1473 65V42.905H67.8073V46.1C68.4673 44.96 69.3673 44.075 70.5073 43.445C71.6773 42.785 73.0273 42.455 74.5573 42.455C76.1173 42.455 77.4373 42.8 78.5173 43.49C79.6273 44.18 80.4673 45.23 81.0373 46.64C81.7273 45.32 82.7173 44.3 84.0073 43.58C85.3273 42.83 86.7823 42.455 88.3723 42.455C90.8923 42.455 92.7673 43.22 93.9973 44.75C95.2273 46.25 95.8423 48.575 95.8423 51.725V65H89.0473V51.95C89.0473 50.48 88.8073 49.415 88.3273 48.755C87.8773 48.065 87.0973 47.72 85.9873 47.72C84.6973 47.72 83.6923 48.17 82.9723 49.07C82.2523 49.97 81.8923 51.245 81.8923 52.895V65H75.0973V51.95C75.0973 50.48 74.8573 49.415 74.3773 48.755C73.8973 48.065 73.1173 47.72 72.0373 47.72C70.7473 47.72 69.7423 48.17 69.0223 49.07C68.3023 49.97 67.9423 51.245 67.9423 52.895V65H61.1473ZM112.523 65.495C109.913 65.495 107.663 65.03 105.773 64.1C103.913 63.14 102.473 61.805 101.453 60.095C100.463 58.355 99.9675 56.315 99.9675 53.975C99.9675 51.695 100.448 49.7 101.407 47.99C102.398 46.25 103.733 44.9 105.413 43.94C107.123 42.95 109.088 42.455 111.308 42.455C114.518 42.455 117.068 43.475 118.958 45.515C120.848 47.525 121.793 50.255 121.793 53.705V55.415H106.448C106.688 57.155 107.318 58.43 108.338 59.24C109.388 60.02 110.828 60.41 112.658 60.41C113.858 60.41 115.073 60.23 116.303 59.87C117.533 59.51 118.643 58.955 119.633 58.205L121.433 62.75C120.323 63.59 118.958 64.265 117.338 64.775C115.748 65.255 114.143 65.495 112.523 65.495ZM111.578 46.955C110.138 46.955 108.968 47.39 108.068 48.26C107.198 49.13 106.658 50.345 106.448 51.905H116.168C115.988 48.605 114.458 46.955 111.578 46.955ZM164.038 65V59.825L173.983 49.385C175.243 48.005 176.143 46.805 176.683 45.785C177.253 44.735 177.538 43.685 177.538 42.635C177.538 39.935 175.873 38.585 172.543 38.585C171.253 38.585 169.963 38.84 168.673 39.35C167.383 39.83 166.123 40.58 164.893 41.6L162.643 36.47C163.963 35.33 165.583 34.43 167.503 33.77C169.453 33.11 171.448 32.78 173.488 32.78C177.028 32.78 179.728 33.575 181.588 35.165C183.478 36.725 184.423 38.96 184.423 41.87C184.423 43.79 183.973 45.635 183.073 47.405C182.203 49.145 180.763 51.035 178.753 53.075L172.633 59.285H185.593V65H164.038ZM192.19 65V59.285H199.3V41.06L193.855 44.255L191.2 39.17L201.325 33.275H206.275V59.285H212.935V65H192.19Z"
                    fill="#232B2B"
                  />
                </g>
              </g>
            </svg>
            {/* surround the below div in a link component from react router */}
            <a style={{ textDecoration: "none" }} href="https://github.com/tab87tt/portfolio-front">
              <div
                style={{
                  borderWidth: 2.5,
                  borderStyle: "solid",
                  borderColor: "#FA3663",
                  height: "3.5vw",
                  width: "15vw",
                  color: "#FA3663",
                  fontSize: "2vw",
                  fontWeight: "700",
                  paddingTop: "0.6vw",
                  marginTop: "1.6vw",
                  cursor: "pointer",
                }}
              >
                GITHUB
              </div>
            </a>
          </div>
          <div style={styles.description}>
            <p style={styles.heading}></p>
            <p style={styles.paragraph2}>
              21 is a turn-based game that challenges the player (vs computer),
              in a race to 21. The concept is based around an algorithm I
              designed that alters the computers moves in response to the player
              in the hope of winning. The aim of the game is to NOT be the
              player who 'taps' the bomb after the count of 21 is reached.
              <br />
              <br />I created the game inside Reactjs, using javascript, html
              and css combined with click responsive svg animations. The app
              primarily showcases UI/UX game design, sequential css svg
              animations, state management and responsive algorithmic computing.
              Feel free to check out my{" "}
              <a style={styles.link} href="https://github.com/tab87tt/portfolio-front">
                GitHub
              </a>{" "}
              source code for more details. Note: The game is playable on PC and
              restricted on mobiles due to their smaller processing power.
            </p>
          </div>
          <div style={styles.videoContainerOuter2}>
            <div style={styles.videoContainerInner2}>
              {!ready && (
                <div
                  style={{
                    width: "100%",
                    height: "100%",
                    position: "absolute",
                    top: 0,
                    left: 0,
                  }}
                >
                  <img
                    src={loadingScreen}
                    style={{ width: "100%", height: "100%" }}
                    alt="Loading Video..."
                  />
                </div>
              )}
              <ReactPlayer
                style={{ position: "absolute", top: 0, left: 0 }}
                loop
                controls
                width="100%"
                height="100%"
                onReady={onReadyHandler}
                url="https://youtu.be/kfDvZnhQM-8"
              />
            </div>
          </div>
        </motion.div>
      )}
    </>
  );
};

export default GameDetailsScreen;

const styles = {
  container: {
    //note background clip at bottom, background color hightlight this
    //backgroundColor: "#f9f1f1",
    minHeight: "100vh",
    maxWidth: "100%",
    display: "flex",
    justifyContent: "center",
    alignItems: "center",
    flexDirection: "column",
  },
  videoContainerOuter: {
    //backgroundColor: "#f9f1f1",
    backgroundColor: "#424f6a",
    height: `${(75 / 1.7) * 1}vw`,
    width: "73.5vw",

    display: "flex",
    justifyContent: "center",
    alignItems: "center",
    marginBottom: "3vh",
    zIndex: 1,
  },
  videoContainerInner: {
    height: `${(73 / 1.7) * 1}vw`,
    width: "72.5vw",
    margin: "auto",
    display: "flex",
    justifyContent: "center",
    alignItems: "center",
    marginBottom: "2vh",
    marginTop: "2vh",
    zIndex: 2,
    position: "relative",
  },
  paragraph: {
    width: "73.5vw",
    margin: "auto",
    paddingBottom: "3vh",
    textAlign: "left",
  },
  videoContainerOuter2: {
    //backgroundColor: "#f9f1f1",
    backgroundColor: "#424f6a",
    height: `${(85 / 1.7) * 1}vw`,
    width: "85vw",

    display: "flex",
    justifyContent: "center",
    alignItems: "center",
    marginBottom: "3vh",
    zIndex: 1,
  },
  videoContainerInner2: {
    height: `${(85 / 1.7) * 1}vw`,
    width: "85vw",
    margin: "auto",
    display: "flex",
    justifyContent: "center",
    alignItems: "center",
    marginBottom: "2vh",
    marginTop: "2vh",
    zIndex: 2,
    position: "relative",
  },
  paragraph2: {
    width: "85vw",
    margin: "auto",
    paddingBottom: "3vh",
    textAlign: "left",
  },
  projectName: {
    marginTop: "1vw",
    display: "flex",
    flexDirection: "column",
    justifyContent: "center",
    alignItems: "center",
    marginBottom: "2.5vw",
  },
  link: {
    textDecoration: "none",
    fontWeight: "bold",
    color: "#FA3663",
  },
};
